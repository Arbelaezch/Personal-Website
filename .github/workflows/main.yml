name: Portfolio CI/CD Pipeline

on:
  push:
    branches: [ development, main ]
  pull_request:
    branches: [ development, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        DJANGO_ALLOWED_HOSTS: "www.christiandonovan.ca christiandonovan.ca localhost 127.0.0.1 [::1]"
        DEBUG: "1"
        SECRET_KEY: "dummy_key_for_tests"
        DEV_DB_ENGINE: "django.db.backends.sqlite3"
        DEV_DB_NAME: ":memory:"
        DEV_DB_HOST: ""  # Leave blank for sqlite
        DEV_DB_USER: ""  # Leave blank for sqlite
        DEV_DB_PASSWORD: ""  # Leave blank for sqlite
        DEV_DB_PORT: ""  #  Leave blank for sqlite
      run: |
        cd website
        python manage.py test

  deploy:
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development')
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_SERVER_IP || secrets.DEV_SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.MEDITATIONS_PRIVATE_KEY }}
        envs: GITHUB_REF
        script: |
          # Deploy to appropriate directory based on branch
          set -e  # Exit on any error
          echo "Starting deployment..."
          
          # Create a temporary deployment script
          cat << 'EOF' > /tmp/deploy.sh
          #!/bin/bash
          set -e
          
          # Install system dependencies
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y pkg-config python3-dev default-libmysqlclient-dev build-essential
          
          # Setup SSH for GitHub
          mkdir -p ~/.ssh
          echo "${{ secrets.MEDITATIONS_GITHUB_DEPLOY_KEY }}" > ~/.ssh/github_deploy_key
          chmod 600 ~/.ssh/github_deploy_key
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/github_deploy_key
          
          # Trust GitHub's public key
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          
          # Set deployment directory and pull changes
          DEPLOY_DIR=${{ github.ref == 'refs/heads/main' && '/var/www/portfolio' || '/var/www/portfolio-dev' }}
          cd $DEPLOY_DIR
          git pull origin ${{ github.ref_name }}
          
          # Update dependencies and run Django commands
          source env/bin/activate
          pip install -r requirements.txt
          cd website
          python manage.py collectstatic --noinput
          python manage.py migrate
          
          # Restart appropriate service
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            sudo systemctl restart gunicorn
            sudo systemctl status gunicorn
          else
            sudo systemctl restart gunicorn-dev
            sudo systemctl status gunicorn-dev
          fi
          EOF
            
            # Make the script executable
            chmod +x /tmp/deploy.sh
            
            # Run the deployment script
            bash -l /tmp/deploy.sh